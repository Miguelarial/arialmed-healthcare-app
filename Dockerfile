# Build stage
FROM node:18-alpine AS builder
WORKDIR /app

# Add build arguments
ARG PROJECT_ID
ARG API_KEY
ARG DATABASE_ID
ARG PATIENT_COLLECTION_ID
ARG DOCTOR_COLLECTION_ID
ARG APPOINTMENT_COLLECTION_ID
ARG NEXT_PUBLIC_BUCKET_ID
ARG NEXT_PUBLIC_ENDPOINT
ARG NEXT_PUBLIC_ADMIN_PASSKEY
ARG NEXT_PUBLIC_SERVICEID
ARG NEXT_PUBLIC_TEMPLATEID
ARG NEXT_PUBLIC_APIKEY

# Set environment variables for build time
ENV PROJECT_ID=$PROJECT_ID
ENV API_KEY=$API_KEY
ENV DATABASE_ID=$DATABASE_ID
ENV PATIENT_COLLECTION_ID=$PATIENT_COLLECTION_ID
ENV DOCTOR_COLLECTION_ID=$DOCTOR_COLLECTION_ID
ENV APPOINTMENT_COLLECTION_ID=$APPOINTMENT_COLLECTION_ID
ENV NEXT_PUBLIC_BUCKET_ID=$NEXT_PUBLIC_BUCKET_ID
ENV NEXT_PUBLIC_ENDPOINT=$NEXT_PUBLIC_ENDPOINT
ENV NEXT_PUBLIC_ADMIN_PASSKEY=$NEXT_PUBLIC_ADMIN_PASSKEY
ENV NEXT_PUBLIC_SERVICEID=$NEXT_PUBLIC_SERVICEID
ENV NEXT_PUBLIC_TEMPLATEID=$NEXT_PUBLIC_TEMPLATEID
ENV NEXT_PUBLIC_APIKEY=$NEXT_PUBLIC_APIKEY

COPY package*.json ./
RUN npm install
COPY . .
RUN npm run build

# Production stage
FROM node:18-alpine AS runner
WORKDIR /app

# Copy built assets
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/public ./public
COPY --from=builder /app/package.json ./package.json
COPY --from=builder /app/node_modules ./node_modules

EXPOSE 3000
ENV PORT=3000
ENV HOSTNAME="0.0.0.0"

CMD ["npm", "start"]